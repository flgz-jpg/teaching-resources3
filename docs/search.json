[
  {
    "objectID": "R_Tutorial_Mediation.html",
    "href": "R_Tutorial_Mediation.html",
    "title": "R Tutorial: Mediationsanalyse",
    "section": "",
    "text": "Dieses R Tutorial ist begleitend für die Input-Sitzung “Mediationsanalyse” des Masterkolloquiums Forenische Psychologie an der Univserisität Basel erstellt worden. Den Datensatz zur Lösung der Aufgaben finden Teilnehmende des Masterkollquiums auf der Learning Platform ADAM.",
    "crumbs": [
      "Comments / Feedback",
      "R Tutorial: Mediationsanalyse"
    ]
  },
  {
    "objectID": "R_Tutorial_Mediation.html#aufgabenstellung",
    "href": "R_Tutorial_Mediation.html#aufgabenstellung",
    "title": "R Tutorial: Mediationsanalyse",
    "section": "Aufgabenstellung",
    "text": "Aufgabenstellung\nIm Folgenden wollen wir herausfinden, ob ein hostiler Attributionsstil dazu führt, dass emotional instabilere Eltern eher zu bestrafendes Erziehungsverhalten zeigen.\n\n\n\n\n\n\nÜberlegen Sie: Welches ist der Prädiktor? Was der Mediator?\n\n\n\n\n\n\n\n\ngraph LR\n    A[Prädiktor] -- Kein / Kleiner Effekt --&gt; B[Outcome]\n    A -- Signifikanter Effekt --&gt; C[Mediator]\n    C -- Signifikanter Effekt --&gt; B[Outcome]\n\n\n\n\n\n\n\n\n\nLaden Sie folgende Packages\n\n\nlibrary(jtools)\nlibrary(dplyr)\nlibrary(mediation)\n\n\nDaten einlesen\n\nLesen Sie den Datensatz data.csv ein, der Ihnen über ADAM zur Verfügung gestellt wurde.\nDieser Datensatz enthält Daten zu Schemata und Erziehungsverhalten von Eltern.\n\n# Daten einlesen\n\ndata = read.csv2(\"data.csv\", sep = \";\")\n# alternativ: df &lt;- read.csv2() \n\n\n# as.numeric stellt sicher, dass die Variablen-Werte numerisch sind\n# mit str() lässts ich im Vorfeld überprüfen, wie die Variablen-Werte gespeichert sind\n\ndata$emotionality_z &lt;- as.numeric(scale(as.numeric(data$emotionality)))\ndata$hostility_z &lt;- as.numeric(scale(as.numeric(data$hostility)))\n\n\nMediationsanalyse nach Baron und Kenny\n\nKopieren Sie untenstehenden Code in ihr R Script, fügen Sie die Variablen punishment, emotionality_z und hostility_z an den entsprechenden Stellen im Code ein und lassen Sie sich den Output ausgeben.\n\n#  Mediationsanalyse nach Baron & Kenny\n# ----------------------------------------------------------\n\nlibrary(jtools)\n\n#  Step 1: Gibt es einen direkten Hauptweffekt x -&gt; y? (path c)\n\npath_c =lm( ~ , data = data)\nsumm(path_c)$coef\n\n#  Step 2: Gibt es einen signifikanten Zusammenhang zwischen X und M? (path a)\n\npath_a =lm( ~ , data = data)\nsumm(path_a)$coef\n\n#  Step 3: Gibt es gleichzeitig einen Zusammenhang zwischen X und Y, wenn man für X kontrolliert? (path b)\n#  Step 4: Verschwindet / verringert sich der Effekt zwischen X und Y, wenn man für M kontrolliert? (path c')\n\npath_b_cprime =lm(  ~  + , data = data)\n#summ(path_b_cprime)$coef\n\n# Visualize Summary\n\nexport_summs(path_c, path_a, path_b_cprime)\n\n\n\n\n\n\nExkurs: Testung des Mediationseffekts\n\n\n\n\n\nDie Herangehensweise nach Baron und Kenny liefert Evidenz für oder gegen einen Mediationseffekt, jedoch keinen Test desselben. Eine Herangehensweise zur Testung des Mediationseffektes soll im Folgenden vorgestellt werden.\n\n#  Testung des Mediationseffekts (ab) mit Bootstrapped Intervals\n# -------------------------------------------------------------------------------------\n\n\ndata3 = na.omit(data)\n\nmed_model &lt;- lm(hostility_z ~ emotionality_z, data = data3)\nout_model &lt;- lm(punishment ~ hostility_z + emotionality_z, data = data3)\n\n\nmediate_test &lt;- mediate(med_model, out_model,\n                        treat = \"emotionality_z\",\n                        mediator = \"hostility_z\",\n                        boot = TRUE, sims = 5000)\n\nRunning nonparametric bootstrap\n\nsummary(mediate_test)\n\n\nCausal Mediation Analysis \n\nNonparametric Bootstrap Confidence Intervals with the Percentile Method\n\n                Estimate 95% CI Lower 95% CI Upper p-value    \nACME            0.150157     0.117144     0.184706  &lt;2e-16 ***\nADE             0.002699    -0.052396     0.058560  0.8916    \nTotal Effect    0.152856     0.098338     0.208837  &lt;2e-16 ***\nProp. Mediated  0.982343     0.700778     1.484945  &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 940 \n\n\nSimulations: 5000 \n\n    # Interpretation\n\n# ACME: Das ist der indirekte Effekt (Average Causal Mediation Effect) — der Teil von X’s Effect auf Y, der durch den Mediator M vermittelt wird\n\n# ADE: Das ist der direkte Effekt; der Effekt von X auf Y unter Kontrolle des Einflusses von M",
    "crumbs": [
      "Comments / Feedback",
      "R Tutorial: Mediationsanalyse"
    ]
  },
  {
    "objectID": "mediationsanalyse.html",
    "href": "mediationsanalyse.html",
    "title": "Input: Mediationsanalyse",
    "section": "",
    "text": "library(flextable)\nlibrary(jtools)\nlibrary(dplyr)\nlibrary(mediation)\n\n\n\nIn den Daten einer Studie zu den negativen Effekten von Internet-Konsum auf die Studienleistung zeigt sich, dass Personen, die im offenen Antwortformat angegeben haben, sich regelmässig süsse Katzenvideos auf TikTok anzusehen, entgegen allen Erwartungen bessere Noten schreiben.\n\n\n\n\n\ngraph LR\n    A[Süsse Katzenvideos] -- Signifikanter Effekt --&gt; B[Produktivität]\n\n\n\n\n\n\nHandelt es sich hierbei um einen plausiblen Zusammenhang? Welche Alternativen wären denkbar?\nAus der Literatur weiss die Masterandin in dem Projekt, dass eine gute Stimmung sich positiv auf das Lernen auswirkt. Daraus schliesst sie, dass der Effekt zwischen süssen Katzenvideos und besserer Studienleistung über die gute Stimmung vermittelt wird.\nSie nimmt also an, dass es sich um einen Mediationseffekt handelt. Der indirekte Effekt der Unabhängigen Variable (UV; süsse Katzenvideos) auf die Abhängige Variable (AV; besser Studienleistung) wird über einen Mediator (M; gute Stimmung) vermittelt.\n\n\n\n\n\n\nDefinition Mediationseffekt\n\n\n\nEin Mediationseffekt ist ein\n\nIndirekter Effekt\nDer Effekt der UV auf die AV wird durch einen Mediator M vermittelt\nEs handelt sich um eine kausale Kette / einen Mechanismus\n\n\n\n\n\n\nEs gibt unterschiedliche Methoden, um Mediationseffekte zu prüfen. In diesem Beispiel werden wir die klassische Methode von Baron und Kenney (1986) verwenden. Es handelt sich dabei um eine nicht unumstrittene, aber gut etablierte Methode.\n\n\nDiese Methode umfasst 4 Schritte:\n\nSchätzung der Beziehung zwischen X und Y → Der Effekt c muss signifikant von 0 verschieden sein.\nSchätzung der Beziehung zwischen X und M → Der Effekt a muss signifikant von 0 verschieden sein.\nSchätzung der Beziehung zwischen M und Y unter Kontrolle von X → Der Effekt b muss signifikant von 0 verschieden sein.\nSchätzung der Beziehung zwischen X und Y unter Kontrolle von M → Der Effekt c′ sollte nicht signifikant sein und nahe bei 0 liegen.\n\n\n\n\n\n\ngraph LR\n    A[Süsse Katzenvideos] -- Kein / Kleiner Effekt --&gt; B[Produktivität]\n    A -- Signifikanter Effekt --&gt; C[Gute Stimmung]\n    C -- Signifikanter Effekt --&gt; B[Produktivität]\n\n\n\n\n\n\n“Full Mediation”: Wenn für M kontrolliert wird, gibt es keinen Zusammenhang mehr / ist der Zusammenhang nicht mehr signifikant\n“Partial Mediation”: Wenn für M kontrolliert wird, wird der Zusammenhang kleiner\n\n\n\n\n\n\nMethode von Baron und Kenny (1986)\n\n\n\n\nPrüfung eines signifikanten direkten Zusammenhangs zwischen UV und AV\nPrüfung eines signifikanten Zusammenhangs zwischen UV und M\nPrüfung eines signifikanten Zusammenhangs zwischen M und AV unter Kontrolle der UV\nWenn für M kontrolliert wird, wird der Zusammehang zwischen UV und AV kleiner / nicht mehr signifikant\n\n\n\n\n\n\n\n\n\n\n\nCode\nset.seed(123)\n\nn &lt;- 100\n\n# Unabhängige Variable (X): Cat Videos\ncat_videos &lt;- rnorm(n, mean = 5, sd = 2)\n\n# Mediator (M): Happiness (beeinflusst durch Cat Videos)\nhappiness &lt;- 0.5 * cat_videos + rnorm(n)\n\n# Abhängige Variable (Y): Productivity (beeinflusst durch Cat Videos und Happiness)\nproductivity &lt;- 0.3 * cat_videos + 0.6 * happiness + rnorm(n)\n\ndata &lt;- data.frame(cat_videos, happiness, productivity)\nhead(data)\n\n\n  cat_videos happiness productivity\n1   3.879049  1.229118     4.099996\n2   4.539645  2.526706     4.190330\n3   8.117417  3.812016     4.457290\n4   5.141017  2.222966     3.419279\n5   5.258575  1.677669     2.169834\n6   8.430130  4.170037     4.554814\n\n\n\n\n\n\n\n\n1.Schätzung der Beziehung zwischen X und Y→ Der Effekt c muss signifikant von 0 verschieden sein.\n\n\n\n\n\n\n# Schritt 1: X → Y (Total Effect c)\n\nmodel_c &lt;- lm(productivity ~ cat_videos, data = data)\nsumm(model_c)$coef\n\n                 Est.       S.E.   t val.            p\n(Intercept) 0.4856955 0.33958223 1.430274 1.558192e-01\ncat_videos  0.5170480 0.06185437 8.359120 4.319505e-13\n\n\n\n\n\n\n\n\n\n\n\n2.Schätzung der Beziehung zwischen X und M→ Der Effekt a muss signifikant von 0 verschieden sein.\n\n\n\n\n\n\n# Schritt 2: X → M (Path a)\nmodel_a &lt;- lm(happiness ~ cat_videos, data = data)\nsumm(model_a)$coef\n\n                  Est.       S.E.     t val.            p\n(Intercept) 0.02837598 0.29338333 0.09671982 9.231464e-01\ncat_videos  0.47376419 0.05343931 8.86546267 3.497142e-14\n\n\n\n\n\n\n\n\n\n\n\n3.&4.Schätzung der Beziehung zwischen M und Y unter Kontrolle von X→ Der Effekt b muss signifikant von 0 verschieden sein / Der Effekt c’ wird kleiner / nicht mehr signifikant.\n\n\n\n\n\n\n# Schritt 3: M → Y (kontrolliert für X) (Path b)\n# und X → Y (kontrolliert für M) (Direct Effect c')\nmodel_b_cprime &lt;- lm(productivity ~ cat_videos + happiness, data = data)\nsumm(model_b_cprime)$coef\n\n                 Est.       S.E.   t val.            p\n(Intercept) 0.4679943 0.28752862 1.627644 1.068444e-01\ncat_videos  0.2215086 0.07030135 3.150844 2.165393e-03\nhappiness   0.6238113 0.09899469 6.301462 8.671883e-09\n\n\n\n\n\n\nTotaler Effekt von X auf Y: c = c’ + ab\nIndirekter Effekt von X auf Y: ab\nDirekter Effekt X on Y nach dem für M kontrolliert wurde: c’ = c - ab\n\n\n\nCode\nlibrary(jtools)\n\nexport_summs(model_c, model_a, model_b_cprime)\n\n\n\n\nModel 1Model 2Model 3\n\n(Intercept)0.49    0.03    0.47    \n\n(0.34)   (0.29)   (0.29)   \n\ncat_videos0.52 ***0.47 ***0.22 ** \n\n(0.06)   (0.05)   (0.07)   \n\nhappiness              0.62 ***\n\n              (0.10)   \n\nN100       100       100       \n\nR20.42    0.45    0.59    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05.",
    "crumbs": [
      "Comments / Feedback",
      "Input: Mediationsanalyse"
    ]
  },
  {
    "objectID": "mediationsanalyse.html#beispiel",
    "href": "mediationsanalyse.html#beispiel",
    "title": "Input: Mediationsanalyse",
    "section": "",
    "text": "In den Daten einer Studie zu den negativen Effekten von Internet-Konsum auf die Studienleistung zeigt sich, dass Personen, die im offenen Antwortformat angegeben haben, sich regelmässig süsse Katzenvideos auf TikTok anzusehen, entgegen allen Erwartungen bessere Noten schreiben.\n\n\n\n\n\ngraph LR\n    A[Süsse Katzenvideos] -- Signifikanter Effekt --&gt; B[Produktivität]\n\n\n\n\n\n\nHandelt es sich hierbei um einen plausiblen Zusammenhang? Welche Alternativen wären denkbar?\nAus der Literatur weiss die Masterandin in dem Projekt, dass eine gute Stimmung sich positiv auf das Lernen auswirkt. Daraus schliesst sie, dass der Effekt zwischen süssen Katzenvideos und besserer Studienleistung über die gute Stimmung vermittelt wird.\nSie nimmt also an, dass es sich um einen Mediationseffekt handelt. Der indirekte Effekt der Unabhängigen Variable (UV; süsse Katzenvideos) auf die Abhängige Variable (AV; besser Studienleistung) wird über einen Mediator (M; gute Stimmung) vermittelt.\n\n\n\n\n\n\nDefinition Mediationseffekt\n\n\n\nEin Mediationseffekt ist ein\n\nIndirekter Effekt\nDer Effekt der UV auf die AV wird durch einen Mediator M vermittelt\nEs handelt sich um eine kausale Kette / einen Mechanismus",
    "crumbs": [
      "Comments / Feedback",
      "Input: Mediationsanalyse"
    ]
  },
  {
    "objectID": "mediationsanalyse.html#wie-lässt-sich-das-überprüfen",
    "href": "mediationsanalyse.html#wie-lässt-sich-das-überprüfen",
    "title": "Input: Mediationsanalyse",
    "section": "",
    "text": "Es gibt unterschiedliche Methoden, um Mediationseffekte zu prüfen. In diesem Beispiel werden wir die klassische Methode von Baron und Kenney (1986) verwenden. Es handelt sich dabei um eine nicht unumstrittene, aber gut etablierte Methode.\n\n\nDiese Methode umfasst 4 Schritte:\n\nSchätzung der Beziehung zwischen X und Y → Der Effekt c muss signifikant von 0 verschieden sein.\nSchätzung der Beziehung zwischen X und M → Der Effekt a muss signifikant von 0 verschieden sein.\nSchätzung der Beziehung zwischen M und Y unter Kontrolle von X → Der Effekt b muss signifikant von 0 verschieden sein.\nSchätzung der Beziehung zwischen X und Y unter Kontrolle von M → Der Effekt c′ sollte nicht signifikant sein und nahe bei 0 liegen.\n\n\n\n\n\n\ngraph LR\n    A[Süsse Katzenvideos] -- Kein / Kleiner Effekt --&gt; B[Produktivität]\n    A -- Signifikanter Effekt --&gt; C[Gute Stimmung]\n    C -- Signifikanter Effekt --&gt; B[Produktivität]\n\n\n\n\n\n\n“Full Mediation”: Wenn für M kontrolliert wird, gibt es keinen Zusammenhang mehr / ist der Zusammenhang nicht mehr signifikant\n“Partial Mediation”: Wenn für M kontrolliert wird, wird der Zusammenhang kleiner\n\n\n\n\n\n\nMethode von Baron und Kenny (1986)\n\n\n\n\nPrüfung eines signifikanten direkten Zusammenhangs zwischen UV und AV\nPrüfung eines signifikanten Zusammenhangs zwischen UV und M\nPrüfung eines signifikanten Zusammenhangs zwischen M und AV unter Kontrolle der UV\nWenn für M kontrolliert wird, wird der Zusammehang zwischen UV und AV kleiner / nicht mehr signifikant",
    "crumbs": [
      "Comments / Feedback",
      "Input: Mediationsanalyse"
    ]
  },
  {
    "objectID": "mediationsanalyse.html#in-r",
    "href": "mediationsanalyse.html#in-r",
    "title": "Input: Mediationsanalyse",
    "section": "",
    "text": "Code\nset.seed(123)\n\nn &lt;- 100\n\n# Unabhängige Variable (X): Cat Videos\ncat_videos &lt;- rnorm(n, mean = 5, sd = 2)\n\n# Mediator (M): Happiness (beeinflusst durch Cat Videos)\nhappiness &lt;- 0.5 * cat_videos + rnorm(n)\n\n# Abhängige Variable (Y): Productivity (beeinflusst durch Cat Videos und Happiness)\nproductivity &lt;- 0.3 * cat_videos + 0.6 * happiness + rnorm(n)\n\ndata &lt;- data.frame(cat_videos, happiness, productivity)\nhead(data)\n\n\n  cat_videos happiness productivity\n1   3.879049  1.229118     4.099996\n2   4.539645  2.526706     4.190330\n3   8.117417  3.812016     4.457290\n4   5.141017  2.222966     3.419279\n5   5.258575  1.677669     2.169834\n6   8.430130  4.170037     4.554814\n\n\n\n\n\n\n\n\n1.Schätzung der Beziehung zwischen X und Y→ Der Effekt c muss signifikant von 0 verschieden sein.\n\n\n\n\n\n\n# Schritt 1: X → Y (Total Effect c)\n\nmodel_c &lt;- lm(productivity ~ cat_videos, data = data)\nsumm(model_c)$coef\n\n                 Est.       S.E.   t val.            p\n(Intercept) 0.4856955 0.33958223 1.430274 1.558192e-01\ncat_videos  0.5170480 0.06185437 8.359120 4.319505e-13\n\n\n\n\n\n\n\n\n\n\n\n2.Schätzung der Beziehung zwischen X und M→ Der Effekt a muss signifikant von 0 verschieden sein.\n\n\n\n\n\n\n# Schritt 2: X → M (Path a)\nmodel_a &lt;- lm(happiness ~ cat_videos, data = data)\nsumm(model_a)$coef\n\n                  Est.       S.E.     t val.            p\n(Intercept) 0.02837598 0.29338333 0.09671982 9.231464e-01\ncat_videos  0.47376419 0.05343931 8.86546267 3.497142e-14\n\n\n\n\n\n\n\n\n\n\n\n3.&4.Schätzung der Beziehung zwischen M und Y unter Kontrolle von X→ Der Effekt b muss signifikant von 0 verschieden sein / Der Effekt c’ wird kleiner / nicht mehr signifikant.\n\n\n\n\n\n\n# Schritt 3: M → Y (kontrolliert für X) (Path b)\n# und X → Y (kontrolliert für M) (Direct Effect c')\nmodel_b_cprime &lt;- lm(productivity ~ cat_videos + happiness, data = data)\nsumm(model_b_cprime)$coef\n\n                 Est.       S.E.   t val.            p\n(Intercept) 0.4679943 0.28752862 1.627644 1.068444e-01\ncat_videos  0.2215086 0.07030135 3.150844 2.165393e-03\nhappiness   0.6238113 0.09899469 6.301462 8.671883e-09\n\n\n\n\n\n\nTotaler Effekt von X auf Y: c = c’ + ab\nIndirekter Effekt von X auf Y: ab\nDirekter Effekt X on Y nach dem für M kontrolliert wurde: c’ = c - ab\n\n\n\nCode\nlibrary(jtools)\n\nexport_summs(model_c, model_a, model_b_cprime)\n\n\n\n\nModel 1Model 2Model 3\n\n(Intercept)0.49    0.03    0.47    \n\n(0.34)   (0.29)   (0.29)   \n\ncat_videos0.52 ***0.47 ***0.22 ** \n\n(0.06)   (0.05)   (0.07)   \n\nhappiness              0.62 ***\n\n              (0.10)   \n\nN100       100       100       \n\nR20.42    0.45    0.59    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05.",
    "crumbs": [
      "Comments / Feedback",
      "Input: Mediationsanalyse"
    ]
  },
  {
    "objectID": "mediationsanalyse.html#exkurs-testung-des-mediationseffekts",
    "href": "mediationsanalyse.html#exkurs-testung-des-mediationseffekts",
    "title": "Input: Mediationsanalyse",
    "section": "Exkurs: Testung des Mediationseffekts",
    "text": "Exkurs: Testung des Mediationseffekts\nDie Herangehensweise nach Baron und Kenny liefert Evidenz für oder gegen einen Mediationseffekt, jedoch keinen Test desselben. Eine Herangehensweise zur Testung des Mediationseffektes soll im Folgenden vorgestellt werden.\n\n#  Testung des Mediationseffekts (ab) mit Bootstrapped Intervals\n# -------------------------------------------------------------------------------------\n\n\n\ndata2 &lt;- data %&gt;%\n  dplyr::select(emotionality_z, hostility_z, punishment) %&gt;%\n  na.omit()\n\nmed_model &lt;- lm(hostility_z ~ emotionality_z, data = data2)\nout_model &lt;- lm(punishment ~ hostility_z + emotionality_z, data = data2)\n\n\nmediate_test &lt;- mediate(med_model, out_model,\n                        treat = \"emotionality_z\",\n                        mediator = \"hostility_z\",\n                        boot = TRUE, sims = 5000)\n\nsummary(mediate_test)\n\n\nCausal Mediation Analysis \n\nNonparametric Bootstrap Confidence Intervals with the Percentile Method\n\n                 Estimate 95% CI Lower 95% CI Upper p-value    \nACME            0.1541040    0.1209653    0.1893528  &lt;2e-16 ***\nADE             0.0021063   -0.0558210    0.0588148  0.9704    \nTotal Effect    0.1562103    0.0995321    0.2113514  &lt;2e-16 ***\nProp. Mediated  0.9865165    0.7054667    1.5240164  &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 956 \n\n\nSimulations: 5000 \n\n    # Interpretation\n\n# ACME: Das ist der indirekte Effekt (Average Causal Mediation Effect) — der Teil von X’s Effect auf Y, der durch den Mediator M vermittelt wird\n\n# ADE: Das ist der direkte Effekt; der Effekt von X auf Y unter Kontrolle des Einflusses von M\n\nWir stellen fest: Der direkte Effek ACME ist signifikant. Es handelt sich also um einen Mediationseffekt.",
    "crumbs": [
      "Comments / Feedback",
      "Input: Mediationsanalyse"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "R_Basics.html",
    "href": "R_Basics.html",
    "title": "R Basics",
    "section": "",
    "text": "Diese Seite einthält eine Reihe R-Befehle, welche dabei helfen, erfolgreich in ein R-Projekt zu starten. Es werden die Grundlagen für das Einlesen und Kennenlernen neuer Daten, sowie erste Bearbeitungsschritte zusammengefasst.\n\nDen Working Directory setzen: Wo findet R die Daten?\nEine häufige Fehlermeldung beim Einlesen von Daten ist “no such file or directory”. Die häufigste Ursache ist, dass nicht spezifiziert wurde, über welchen Weg (directory) R auf den Datensatz zugreifen soll.\n\n\n\n\n\n\nWarning\n\n\n\nEs empfielt sich, alle für eine R Session relevanten Dateien im selben Ordner abzulegen, damit der Working Directory nicht innerhalb einer R-Session immer wieder neu gesetzt werden muss.\n\n\n\n#mit folgendem Befehl kann der Working Directory festgelegt werden:\n\nsetwd()\n\n#Manuell: Manüleiste &gt; Session &gt; Set Working Directory &gt; Choose Directory...\n\n#welchen Working Directory R gerade verwendet, verrät folgender Befehl:\n\ngetwd()\n\n\nR Packages und Befehle\nR ist eine Open Source Software, für die jede:r Befehle entwickeln kann. Befehle, die nicht zur R Software selber gehören, sind in sogenannten packages abgelegt.\nDamit die Befehle eines Packages verwendet werden können, muss das entsprechende Package geladen werden (so lässt sich im Umkehrschluss verhindern, dass sich die Befehle unterschiedlicher Packages in die Quere kommen - bspw. weil sie ähnlich heissen oder anderweitig konfligieren).\nVoraussetzung für das Laden eines Packages ist, dass es bereits installiert wurde.\ninstall.packages(\"carData\") # packes installieren\nlibrary(carData) # package laden\nlibrary(dplyr, jtools) # mehrere packages gleichzeitig laden\ndetach(carData, unload = TRUE) # laden von packages rückgängig machen\n\n\nDaten einlesen\nMit R lassen sich unterschiedliche Daten-Formate einlesen. Je nach dem, wie der Datensatz gespeichert ist (bspw. in einer Excel-Tabelle .xlx oder im Textformat .txt) wird ein anderer Befehl verwendet.\nManche Befehle sind flexibel: Read.csv2 ist primär auf Daten ausgelegt, deren Werte mit Kommas getrennt werden (comma seperated values), mit “sep =”” lässt sich aber spezifizieren, ob die Werte durch Kommas, Semicolons oder Abstände getrennt sind.\n\n# Excel\nexcel_data = read_excel()\n\n# Tabellen \ntable_data = read.delim2()\n\n# Komma-getrennte Werte (oder Werte, die durch Semicolons oder Abstände getrennt sind - eignet sich generell gut für Numbers-Datein auf Mac)\ncsv_data = read.csv2() #Beispiel: csv_data = read.csv2(file, sep = \";\")\n\n\nDaten kennen lernen\nUm die folgenden Schritte zu illustrieren, verwenden wir den in R enthaltenen Datensatzes Cars93, der Daten zu 93 US-amerikanischen Autos aus dem Jahr 1993 enthält. Der Datensatz muss nicht eingelesen werden; R kann direkt auf ihn zugreifen.\n\n# Um sich einen groben Überblick zu verschaffen: \n\n## Den Datensatz anzeigen (in separatem Fenster)\nView(Cars93)\n\n## Teile des Datensatzes anzeigen (in der Console)\nhead(Cars93) # zeigt die obersten Zeilen des Datensatzes \"Cars93\" an\ntail(Cars93) # zeigt die letzten Zeilen des Datensatzes \"Cars93\" an\n\n## Die Werte im Datensatz verstehen\nstr(Cars93) # gibt die Struktur der Variablen des Datensatzes \"Cars93\" an\n\n## Die Grobstruktur des Datensatzes verstehen\nis.data.frame(Cars93) #handelt es sich um einen Cars93 Frame?\nis.table(Cars93) #handelt es sich um eine Tabelle\nnrow(Cars93) #Anzahl Zeilen (meistens Beobachtungen / Subjects)\nncol(Cars93) #Anzahl Spalten (meistens Variablen)\nunique(Cars93$study_id) #Anzahl unterschiedlicher Study Id's, sofern diese unter \"study_id\" aufgeführt sind\n\n\nVariablen-Typen in R\n\nLogical: Logicals sind boolsche Variablen, d.h., sie können die Werte TRUE oder FALSE annehmen.\n\nb = TRUE\nis.logical(b) # anhand is.logical() lässt sich herausfinden, ob eine Variable ein logical ist\n\nFactor: Faktors sind ordinal skalierte Werte; sie sind kategorial, haben keine interpretierbaren Abstände, können aber hierarchische Beziehungen abbilden. Zulässige Operationen sind: gleich, ungleich, grösser und kleiner als. Mit str() lässt sich herausfinden, wieviele Abstufungen ein Factor hat.\n\nstr(Cars93$Origin) # str() gibt den Variablen-Typ aus. \nis.factor(Cars93$Origin) # Alternativ kann mit is.factor spezifisch danach gefragt werden, ob es sich um einen Faktor handelt\n\nInteger: Integer sind Variablen, die Ereignisse anhand positiver oder negativer ganzer Zahlen kodieren. Das bedeutet, dass sie keine Nachkommastellen haben. Das kann zu Schwierigkeiten bei Berechnungen führen. In diesem Fall sollten sie in numerische Werte umgewandelt werden.\n\nis.integer(Cars93$RPM) \nCars93$RPM = as.numeric(Cars93$RPM) # Wandelt einen Integer in eine numerische Variable um \n\nNumeric: Numerische Variablen kodieren Ereignisse anhand reeller Zahlen. Das bedeutet, dass sie alle Punkte auf einem Zahlenstrahl abbilden und beliebigen Transformationen (Berechnungen) unterzogen werden können.\n\n(Für diejenigen, die es genau wissen wollen: Intern sind numerische Werte mit x = (-1)^s * m * b^e abgespeichert (d.h. als Gleitkommazahl).\n\nCharacter: Character sind Zeichenketten, auch strings genannt, deren Elemente in Anführungsstrichen gespeichert werden.\n\n\n\nDaten bearbeiten\n\n\n\n\n\n\nDer Erste Bearbeitungsschritt\n\n\n\nNach dem Einlesen und Kennenlernen der Daten sollte der erste Bearbeitungsschritt immer das Erstellen einer Kopie der Daten sein. So muss der Datensatz nicht immer wieder neu eingelesen werden, falls bei einem Bearbeitungsschritt etwas schief geht.\ndf1 = df_org # Ein neues Objekt namens \"df1\" erstellen, in das die Inhalte von df_org abgelegt werden\n\n# In diesem Fall ist df1 eine exakte Kopie von df_org. df_org bleibt dabei unverändert.\n\n\nDf steht hier für data frame, welches das übliche Format für Datensätze in R ist und von den meisten Befehlgruppen zur Datenbearbeitung genutzt wird.\nFolglich ist eine häufige Quelle für Fehlermeldungen, das Datensätze noch nicht in die data frame Struktur gespeichert sind.\nis.data.frame(df1) # prüfen, ob es sich bei df1 um einen data frame handelt\nas.data.frame(df1) # df1 in einen data frame umwandeln\ndf2 = as.data.frame(df2) # ein neues Objekt erstellen, in das die Inhalte von df1 in der data frame Struktur abgelehgt werden\n\n\nSubsets erstellen\nSubsets oder Subsamples werden immer dann erstellt, wenn nur ein Teil des Datensatzes bearbeitet werden soll oder wenn Teile des Datensatzes getrennt betrachtet werden sollen. Das ist u.a. dann der Fall, wenn mit Teilstichproben gearbeitet wird. Manchmal verlangt auch die Struktur der Daten, dass der Datensatz aufgeteilt und nach der Bearbeitung wieder zusammen gesetzt wird.\nWir erstellen einen fiktiven Datensatz, um die folgenden Operationen anwenden zu können\n\nset.seed(123)\nn &lt;- 200\ndf &lt;- data.frame(\n  id = 1:n,\n  age = sample(18:90, n, replace = TRUE),\n  sex = sample(c(\"M\", \"F\", \"X\"), n, replace = TRUE),\n  income = round(rlnorm(n, meanlog = 10, sdlog = 0.6)), \n  relationship_status = sample(c(\"single\", \"monogamous relationship\", \"polyamorous relationship\", \"divorced / widowed\",  NA), n, replace = TRUE, prob = c(0.45,0.35,0.12,0.05,0.03)),\n  score = rnorm(n, 100, 15),\n  date_joined = sample(seq(as.Date(\"2018-01-01\"), as.Date(\"2024-12-31\"), by = \"day\"), n, replace = TRUE),\n  stringsAsFactors = FALSE\n)\n# wir fügen ein paar Missings hinzu\ndf$income[sample(1:n, 10)] &lt;- NA\ndf$score[sample(1:n, 8)] &lt;- NA\n\n# Eine Teilstichprobe erstellen\n\n## Nach Eigenschaften filtern\njunge_erwachsene &lt;- df[df$age &gt;= 18 & df$age &lt;= 35, ] # Teilstichprobe mit Personen zwischen 18 und 35\nrecent_members &lt;- df %&gt;% filter(date_joined &gt;= as.Date(\"2023-01-01\")) # Teilstichprobe anhand des Teilnahmezeitpunkts\n\nlibrary(dplyr)\nyoung_adults_dplyr &lt;- df %&gt;% filter(age &gt;= 18, age &lt;= 35)\n\n## Eine Teilstichprobe mit interessierenden Variablen\nlibrary(data.table)\nDT &lt;- as.data.table(df) \nDT_subset &lt;- DT[age &gt;= 30 & sex == \"F\", .(id, age, sex, income)] # Study Id, Alter, Geschlecht und Einkommen von Frauen über 30\n\n## Zufallsauswahl\n\nsample_idx &lt;- sample(seq_len(nrow(df)), size = 30) # erstelle ein Objekt, welches eine Zufallsauswahl der Beobachtungen in df enthält\ndf_simple_sample &lt;- df[sample_idx,] # filtere diese Zufallsauswahl aus df heraus und lege sie in ein neues Objekt ab\n\nlibrary(dplyr)\ndf_sample_n &lt;- df %&gt;% sample_n(30) # wähle mit dplyr 30 zufällige Beobachtungen und lege sie in ein neues Objekt ab\ndf_sample_frac &lt;- df %&gt;% sample_frac(0.10)  # filtere mit dplyr zufällig eine Fraktion (hier 10%) aus df und lege sie in ein neues Objekt ab\n \n## Stratifizierte Stichprobe\n\nstratified &lt;- df %&gt;% group_by(sex) %&gt;% slice_sample(n = 5) %&gt;% ungroup() # Teilstichprobe mit je 5 Personen pro Geschlecht\nstratified_frac &lt;- df %&gt;% group_by(sex) %&gt;% slice_sample(prop = 0.1) %&gt;% ungroup() # Teilstichprobe aus je 10% der Personen jeden Geschlechts\n\n\nVariablen erstellen und umkodieren\n# Wenn, dann\ndf$income_level = ifelse(df$income &gt;= 26677, \"high\", \"low\") # wenn income  &gt;= 26677, ist es \"high\", ansonsten ist es \"low\"\n\n# Kategorien basierend auf mehreren Bedingungen\ndf$income_level2 = ifelse(!is.na(df$income) & df$income &gt;= 26677 , \"high\", ifelse(!is.na(df$income) & df$income &lt; 26677, \"low\", \"NA\"))\n\n# Werte in Kategorien unterteilen\ndf$age_group = cut(df$age, breaks = c(0, 25, 35, 50, 65, Inf), # Teile die Werte für \"age\" in unterschiedliche Intervalle\n                    labels = c(\"&lt;=25\",\"26-35\",\"36-50\",\"51-65\",\"66+\"), right = TRUE) # füge den Intervallen labels hinzu\n\n# Dummay-Variablen erstellen\n\ndummies &lt;- model.matrix(~ sex - 1, data = df) # erstelle eine Dummy-Matrix aus den Werten für Sex\ndf_dummies &lt;- cbind(df, dummies) # füge die Matrix dem originalen Datensatz hinzu\n\n# recode()\nsex_recoded = recode(df$sex, \"M\" = \"male\", \"F\" = \"female\", \"X\" = \"diverse\", .default = NA_character_)\n\n# mutate() mit case_when()\ndf3 &lt;- df %&gt;%\n  mutate( # verändere die Variablen-Werte\n    income_band = case_when(\n      is.na(income) ~ \"Missing\", # wenn income NA, dann ersetze mit \"Missing\"\n      income &lt; 30000 ~ \"&lt;30k\", \n      income &gt;= 30000 & income &lt; 70000 ~ \"30-70k\", # wenn income zwischen 30000 und 70000 liegt, dann ersetze mit \"30-70k\"\n      income &gt;= 70000 & income &lt; 150000 ~ \"70-150k\",\n      income &gt;= 150000 ~ \"150k+\"\n    )\n  )\n  \nin progress …",
    "crumbs": [
      "Comments / Feedback",
      "R Basics"
    ]
  }
]